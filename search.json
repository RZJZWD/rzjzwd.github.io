[{"title":"嵌入式驱动开发 记录驱动ST7735过程","url":"/2025/01/25/development%20of%20the%20st7735%20driver/","content":"前言寒假回家没事做，特意带了一块1.8寸的TFT屏来练习驱动开发，驱动为ST7735，主控为是RCT6。用了三天加上查阅网上资料，算是磕磕绊绊的把驱动写完了。把开发过程中的过程和问题记录一下，做个备忘。\nST7735介绍ST7735的介绍网上非常多，我就不再重复了。对于ST7735，屏幕的显示原理不是我们应该深究的地方。只谈应用，我个人觉得其内部的RAM（姑且这么称呼）很有意思，还有写入指令一定要仔细，以及ST7735的是在上升沿读入指令数据，这点非常重要，后文会提到。\n硬件spi驱动驱动ST7735的过程也是学习配置spi的过程，所以我选择使用硬件spi。驱动屏幕不需要读数据，用不到MISO线。\n引脚定义\n\n\nGPIO\nST7735\n说明\n\n\n\nPA7\nSDA\n数据写入\n\n\nPA5\nSCL\n时钟\n\n\nPA4\nCS\n片选\n\n\nPC4\nRESET\n硬件复位\n\n\nPC5\nDC\n数据命令选择\n\n\nBLK引脚接高即可\n初始化代码spiSPI_InitStr.SPI_BaudRatePrescaler   = SPI_BaudRatePrescaler_2;// 使分频值达到最大SPI_InitStr.SPI_CPHA\t\t\t    = SPI_CPHA_2Edge;\t\t  // 上升沿有效SPI_InitStr.SPI_CPOL\t\t\t\t= SPI_CPOL_High;\t\t  // 低电平有效,空闲时为高SPI_InitStr.SPI_CRCPolynomial\t    = 7;\t\t\t\t\t  // 无 CRC 校验SPI_InitStr.SPI_DataSize\t\t\t= SPI_DataSize_8b;\t\t  // 发送字长为 8 位SPI_InitStr.SPI_Direction\t\t    = SPI_Direction_1Line_Tx; // 方向为发送SPI_InitStr.SPI_FirstBit\t\t\t= SPI_FirstBit_MSB;\t\t  // 高位先行SPI_InitStr.SPI_Mode\t\t\t\t= SPI_Mode_Master;\t\t  // 主机模式SPI_InitStr.SPI_NSS\t\t\t\t    = SPI_NSS_Soft;\t\t\t  // 软件控制\nCPHA控制在那个边沿发送CPOL控制spi空闲时的状态\n\nST7735要求上升沿接收，如下图。CPOL设置空闲时为高，当要传数据时MOSI拉低再拉高完成一位数据传输，上升沿为第二个边沿，也就是CPHA设置为2edge。\n\n（ST7735数据手册104页）spi写数据函数：\nvoid SPI1_WriteData(uint8_t data)&#123;\tuint16_t timeout=0;\twhile(SPI_I2S_GetFlagStatus(SPI1,SPI_I2S_FLAG_TXE) == RESET)&#123;\t//发送缓冲区为空时（TXE=1）才可以写入\t\tif(++timeout &gt; 200)\t\t\t\t\t\t\t\t\t\t//超时200直接退出\t\t\treturn;\t&#125;\tSPI_I2S_SendData(SPI1,data);&#125;\n\nST7735初始化网上初始化命令的教程有很多，直接照抄即可，下为我的配置：\nvoid TFT_ST7735_Config(void)&#123;\tTFT_ST7735_Reset();\tTFT_ST7735_Write(TFT_DC_CMD,TFT_SLPOUT);\tdelay_ms(120);\t\tTFT_ST7735_Write(TFT_DC_CMD, TFT_FRMCTR1);\tTFT_ST7735_Write(TFT_DC_DATA, 0x05);\tTFT_ST7735_Write(TFT_DC_DATA, 0x3C);\tTFT_ST7735_Write(TFT_DC_DATA, 0x3C);\t\tTFT_ST7735_Write(TFT_DC_CMD, TFT_FRMCTR2);\tTFT_ST7735_Write(TFT_DC_DATA, 0x05);\tTFT_ST7735_Write(TFT_DC_DATA, 0x3C);\tTFT_ST7735_Write(TFT_DC_DATA, 0x3C);\t\tTFT_ST7735_Write(TFT_DC_CMD, TFT_FRMCTR3);\tTFT_ST7735_Write(TFT_DC_DATA, 0x05);\tTFT_ST7735_Write(TFT_DC_DATA, 0x3C);\tTFT_ST7735_Write(TFT_DC_DATA, 0x3C);\tTFT_ST7735_Write(TFT_DC_DATA, 0x05);\tTFT_ST7735_Write(TFT_DC_DATA, 0x3C);\tTFT_ST7735_Write(TFT_DC_DATA, 0x3C);\t\t//===============inversion of control=============\tTFT_ST7735_Write(TFT_DC_CMD, TFT_INVCRT);\tTFT_ST7735_Write(TFT_DC_DATA, 0x03);\t//===============power set========================\tTFT_ST7735_Write(TFT_DC_CMD, TFT_PWCTR1);\tTFT_ST7735_Write(TFT_DC_DATA, 0x28);\tTFT_ST7735_Write(TFT_DC_DATA, 0x08);\tTFT_ST7735_Write(TFT_DC_DATA, 0x04);\t\t\tTFT_ST7735_Write(TFT_DC_CMD, TFT_PWCTR2);\tTFT_ST7735_Write(TFT_DC_DATA, 0xC0);\tTFT_ST7735_Write(TFT_DC_CMD, TFT_PWCTR3);\tTFT_ST7735_Write(TFT_DC_DATA, 0x0D);\tTFT_ST7735_Write(TFT_DC_DATA, 0x00);\t\tTFT_ST7735_Write(TFT_DC_CMD, TFT_PWCTR4);\tTFT_ST7735_Write(TFT_DC_DATA, 0x8D);\tTFT_ST7735_Write(TFT_DC_DATA, 0x2A);\t\tTFT_ST7735_Write(TFT_DC_CMD, TFT_PWCTR5);\tTFT_ST7735_Write(TFT_DC_DATA, 0x8D);\tTFT_ST7735_Write(TFT_DC_DATA, 0xEE);\t//===============vcom set=========================\tTFT_ST7735_Write(TFT_DC_CMD, TFT_VMCTR1);\tTFT_ST7735_Write(TFT_DC_DATA, 0x1A);\t\t//===============scanning direction set===========\t\tif(TFT_DIRECTION==0)\t\tTFT_ST7735_SetScanDirection(0x00);//显示方向选择\telse if(TFT_DIRECTION==1)\tTFT_ST7735_SetScanDirection(0xC0);\telse if(TFT_DIRECTION==2)\tTFT_ST7735_SetScanDirection(0xA0);\telse\t\t\t\t\t\tTFT_ST7735_SetScanDirection(0x70);\t\t//===============gamma sequence set===============\tTFT_ST7735_Write(TFT_DC_CMD, TFT_GMCTRP1);\tTFT_ST7735_Write(TFT_DC_DATA, 0x04);\tTFT_ST7735_Write(TFT_DC_DATA, 0x22);\tTFT_ST7735_Write(TFT_DC_DATA, 0x07);\tTFT_ST7735_Write(TFT_DC_DATA, 0x0A);\tTFT_ST7735_Write(TFT_DC_DATA, 0x2E);\tTFT_ST7735_Write(TFT_DC_DATA, 0x30);\tTFT_ST7735_Write(TFT_DC_DATA, 0x25);\tTFT_ST7735_Write(TFT_DC_DATA, 0x2A);\tTFT_ST7735_Write(TFT_DC_DATA, 0x28);\tTFT_ST7735_Write(TFT_DC_DATA, 0x26);\tTFT_ST7735_Write(TFT_DC_DATA, 0x2E);\tTFT_ST7735_Write(TFT_DC_DATA, 0x3A);\tTFT_ST7735_Write(TFT_DC_DATA, 0x00);\tTFT_ST7735_Write(TFT_DC_DATA, 0x01);\tTFT_ST7735_Write(TFT_DC_DATA, 0x03);\tTFT_ST7735_Write(TFT_DC_DATA, 0x13);\tTFT_ST7735_Write(TFT_DC_CMD, TFT_GMCTRN1);\tTFT_ST7735_Write(TFT_DC_DATA, 0x04);\tTFT_ST7735_Write(TFT_DC_DATA, 0x16);\tTFT_ST7735_Write(TFT_DC_DATA, 0x06);\tTFT_ST7735_Write(TFT_DC_DATA, 0x0D);\tTFT_ST7735_Write(TFT_DC_DATA, 0x2D);\tTFT_ST7735_Write(TFT_DC_DATA, 0x26);\tTFT_ST7735_Write(TFT_DC_DATA, 0x23);\tTFT_ST7735_Write(TFT_DC_DATA, 0x27);\tTFT_ST7735_Write(TFT_DC_DATA, 0x27);\tTFT_ST7735_Write(TFT_DC_DATA, 0x25);\tTFT_ST7735_Write(TFT_DC_DATA, 0x2D);\tTFT_ST7735_Write(TFT_DC_DATA, 0x3B);\tTFT_ST7735_Write(TFT_DC_DATA, 0x00);\tTFT_ST7735_Write(TFT_DC_DATA, 0x01);\tTFT_ST7735_Write(TFT_DC_DATA, 0x04);\tTFT_ST7735_Write(TFT_DC_DATA, 0x13);\t//===============color format set=================\tTFT_ST7735_SetColorFormat(0x05);\t//===============display on=======================\tTFT_ST7735_Write(TFT_DC_CMD, TFT_DISPON);&#125;\n踩坑记录网上初始化命令的教程有很多，我主要说一下我在初始化中有过疑惑的几个点\n\n0x36hMADCTL命令（ST7735数据手册142页）spi数据高位先行，RGB位设置为0选择以 “RGB” 的顺序读入颜色数据\n\n初始化成功后花屏ST7735的frame memory（显存）上电后为随机值，故初始化后花屏，全屏填充白色就可以了ST7735数据手册89页）\n\n\n"},{"title":"Hello World","url":"/2024/08/15/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"}]